//
//  ConversationViewData.swift
//  ChatApp
//
//  Created by –¢–∏–º—É—Ä –¢–∞–π–º–∞—Å–æ–≤ on 05.10.2021.
//

import UIKit

/*
 üëâ –ú–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è Conversation –≤ ChatCell
 */

protocol ConversationViewDataType {
    var profileImage: UIImage? { get }
    var isOnline: Bool { get }
    var userName: String { get }
    var lastMessage: String { get }
    var messageDate: String { get }
    var hasUnreadMessages: Bool { get }
}

struct ConversationViewData: ConversationViewDataType {
    var profileImage: UIImage? {
        // –¢—É—Ç –Ω–∞–¥ –∫–∞–∫-—Ç–æ –ø–æ–ª—É—á–∏—Ç—å –ø–∏–∫—á—É –ø–æ—Ç–æ–º
        return nil
    }
    
    var isOnline: Bool {
        return conversation.isOnline
    }
    
    var userName: String {
        guard let userName = conversation.userName else {
            Log.error("Conversation returns nil for username")
            return ""
        }
        return userName
    }
    
    var lastMessage: String {
        guard let lastMessage = conversation.lastMessage else {
            return "–ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç!"
        }
        return lastMessage
    }
    
    var messageDate: String {
        // –ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –±—É–¥–µ—Ç –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤ –º–æ–¥–µ–ª–∏.
        // –ò–¥–µ—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤—Å–µ —ç—Ç–æ –≤ Date(), –∞ –ø–æ—Ç–æ–º –æ—Ç —Ç—É–¥–∞ –≤—ã—Ç–∞—â–∏—Ç—å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        // –≤ –≤–∏–¥–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ timeSince –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ Date
//        let dateStr = conversation.messageDate
//        let timeStr = conversation.messageTime
        
        // –ü–æ–∫–∞ —á—Ç–æ —Å—Ç–∞–≤–∏–º –º–æ–∫–æ–≤—É—é –¥–∞—Ç—É
        let date = Date().addingTimeInterval(-15000)
        return date.timeSince()
    }
    
    var hasUnreadMessages: Bool {
        guard let hasUnread = conversation.hasUnreadMessages else {
            Log.error("Conversation returns nil for hasUnreadMessages")
            return false
        }
        return hasUnread
    }
    
    private let conversation: Conversation
    
    init(conversation: Conversation) {
        self.conversation = conversation
    }
}
